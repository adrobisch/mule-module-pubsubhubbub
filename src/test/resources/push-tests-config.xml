<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:pubsubhubbub="http://www.mulesoft.org/schema/mule/pubsubhubbub"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:util="http://www.springframework.org/schema/util"
      xmlns:p="http://www.springframework.org/schema/p"
      xsi:schemaLocation="
          http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
          http://www.mulesoft.org/schema/mule/pubsubhubbub http://www.mulesoft.org/schema/mule/pubsubhubbub/3.2/mule-pubsubhubbub.xsd
          http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.2/mule-http.xsd
          http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.2/mule-scripting.xsd
          http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/3.2/mule-test.xsd
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <spring:beans>
        <!-- Any implementation of org.mule.util.store.PartitionableObjectStore can be used as a back-end for the hub -->
        <spring:bean id="hubObjectStore"
            class="org.mule.util.store.PartitionedInMemoryObjectStore" />
    </spring:beans>

    <!-- By default, the hub will retry failed operations (like confirming a subscription) every 5 minutes and a maximum of 12 times -->
    <pubsubhubbub:config objectStore-ref="hubObjectStore" />
    <!-- 
    <pubsubhubbub:config objectStore-ref="hubObjectStore"
                         retryCount="5"
                         retryFrequency="3600000"
                         defaultLeaseSeconds="86400" />
    -->
    
    <flow name="hub">
        <http:inbound-endpoint address="http://localhost:${port1}/hub" />
        <pubsubhubbub:hub />
    </flow>
  
  <!-- Stubs -->
    <flow name="failedSubscriberCallback">
        <http:inbound-endpoint address="http://localhost:${port2}/cb-failure" />
        <test:component throwException="true" />
    </flow>
    <flow name="successfullSubscriberCallback">
        <http:inbound-endpoint address="http://localhost:${port2}/cb-success" />
        <object-to-string-transformer />
        <response>
            <script:transformer>
                <script:script engine="groovy">
                <![CDATA[
                    if (message.getInboundProperty('http.method') == 'GET') {
                      // (un)subscription confirmation
                      return org.mule.module.pubsubhubbub.TestUtils.getUrlParameters(payload).get('hub.challenge').get(0)
                    }
                    else {
                      // content push
                      message.setOutboundProperty('X-Hub-On-Behalf-Of', 123)
                      return ''
                    }
                ]]>
                </script:script>
            </script:transformer>
        </response>
        <test:component />
    </flow>

    <flow name="publisher">
        <composite-source>
            <http:inbound-endpoint address="http://localhost:${port3}/feeds/mouth/rss" />
            <http:inbound-endpoint address="http://localhost:${port3}/feeds/boca/rss" />
        </composite-source>
        <response>
            <component>
                <singleton-object class="org.mule.component.simple.StaticComponent">
                    <property key="dataFile" value="mouth.rss" />
                </singleton-object>
            </component>
            <message-properties-transformer>
                <add-message-property key="Content-Type" value="application/rss+xml" />
            </message-properties-transformer>
        </response>
        <script:transformer>
            <script:script engine="groovy">
            <![CDATA[
                userAgent = message.getInboundProperty('User-Agent')
                if (!(userAgent==~ /Mule PubSubHubbub Hub \(.+; \d+ subscribers\)/)) throw new IllegalArgumentException("Wrong user agent: ${userAgent}")
                return message
            ]]>
            </script:script>
        </script:transformer>
        <test:component />
    </flow>
</mule>